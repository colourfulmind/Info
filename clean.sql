DROP PROCEDURE IF EXISTS add_peer_to_peer_review(VARCHAR, VARCHAR, VARCHAR, check_status, TIME) CASCADE;
DROP PROCEDURE IF EXISTS add_verter_review(VARCHAR, VARCHAR, check_status, TIME) CASCADE;
DROP TRIGGER IF EXISTS update_p2p_trg ON P2P CASCADE;
DROP FUNCTION IF EXISTS update_p2p_fnc() CASCADE;
DROP TRIGGER IF EXISTS insert_xp_trg ON XP CASCADE;
DROP FUNCTION IF EXISTS insert_xp_fnc() CASCADE;

DROP FUNCTION IF EXISTS get_transferred_points() CASCADE;
DROP FUNCTION IF EXISTS get_success_checks() CASCADE;
DROP FUNCTION IF EXISTS get_peer_tracking(VARCHAR) CASCADE;
DROP PROCEDURE IF EXISTS get_points_change(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_points_change_2(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_most_checked_task(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_completed_block(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_peer_recommendations(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_started_blocks(REFCURSOR, VARCHAR, VARCHAR) CASCADE;
DROP PROCEDURE IF EXISTS get_all_checks(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_completed_tasks(TEXT, TEXT, TEXT, REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_previous_tasks(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_successful_checks(INTEGER, REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_peer_with_max_xp(REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_entry_time(TIME, BIGINT, REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_exit_amount(BIGINT, BIGINT, REFCURSOR) CASCADE;
DROP PROCEDURE IF EXISTS get_early_entry_percent(REFCURSOR) CASCADE;

DROP PROCEDURE IF EXISTS remove_tables_by_name(VARCHAR) CASCADE;
DROP PROCEDURE IF EXISTS get_names_and_parameters() CASCADE;
DROP PROCEDURE IF EXISTS destroy_all_triggers() CASCADE;
DROP PROCEDURE IF EXISTS get_names_and_description_by_parameter(REFCURSOR, VARCHAR) CASCADE;

DROP TABLE IF EXISTS
    peers,
    tasks,
    checks,
    p2p,
    verter,
    transferred_points,
    friends,
    recommendations,
    xp,
    time_tracking CASCADE;

DROP PROCEDURE IF EXISTS import_from_csv CASCADE;
DROP PROCEDURE IF EXISTS export_to_csv CASCADE;

DROP TYPE IF EXISTS check_status CASCADE;

DROP DATABASE IF EXISTS Info_v1;
